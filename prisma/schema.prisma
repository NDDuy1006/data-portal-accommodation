// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserAccount {
  id              Int            @id @default(autoincrement())
  firstName       String
  lastName        String
  userName        String?
  avatarUrl       String?
  phone           String
  emailAddress    String         @unique
  password        String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  dateHostStarted DateTime?
  properties      Property[]
  UserLanguage    UserLanguage[]
}

model Property {
  id                Int                 @id @default(autoincrement())
  propertyName      String
  address           String
  description       String
  numBedrooms       Int
  numBeds           Int
  numBathrooms      Int
  isGuestFavourite  Boolean
  nightPrice        Float
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  images            Image[]
  hostId            Int
  host              UserAccount         @relation(fields: [hostId], references: [id])
  location          Location?           @relation(fields: [locationId], references: [id])
  locationId        String?
  PropertyAttribute PropertyAttribute[]
  PlaceType         PlaceType           @relation(fields: [placeTypeId], references: [id])
  placeTypeId       Int
  PropertyCategory  PropertyCategory[]
}

model Image {
  id         Int      @id @default(autoincrement())
  url        String
  propertyId Int
  property   Property @relation(fields: [propertyId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Language {
  id           Int            @id @default(autoincrement())
  languageName String
  UserLanguage UserLanguage[]
}

model UserLanguage {
  userAccountId Int
  languageId    Int
  user          UserAccount @relation(fields: [userAccountId], references: [id])
  language      Language    @relation(fields: [languageId], references: [id])

  @@id([userAccountId, languageId])
}

model Region {
  id         Int       @id @default(autoincrement())
  regionName String
  countries  Country[]
}

model Country {
  id          String     @id
  countryName String
  region      Region     @relation(fields: [regionId], references: [id])
  regionId    Int
  locations   Location[]
}

model Location {
  id           String     @id
  locationName String
  country      Country    @relation(fields: [countryId], references: [id])
  countryId    String
  properties   Property[]
}

model AttributeCategory {
  id           Int         @id @default(autoincrement())
  categoryName String
  attributes   Attribute[]
}

model Attribute {
  id Int @id @default(autoincrement())

  AttributeCategory   AttributeCategory   @relation(fields: [attributeCategoryId], references: [id])
  attributeCategoryId Int
  PropertyAttribute   PropertyAttribute[]
}

model PropertyAttribute {
  propertyId  Int
  attributeId Int
  property    Property  @relation(fields: [propertyId], references: [id])
  attribute   Attribute @relation(fields: [attributeId], references: [id])

  @@id([propertyId, attributeId])
}

model PlaceType {
  id         Int        @id @default(autoincrement())
  typeName   String
  properties Property[]
}

model Category {
  id               Int                @id @default(autoincrement())
  categoryName     String
  PropertyCategory PropertyCategory[]
}

model PropertyCategory {
  propertyId Int
  categoryId Int
  property   Property @relation(fields: [propertyId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([propertyId, categoryId])
}
